/*
Send Payment Transfer API

Mastercard Send Payment Transfer API

API version: 1.0.1
Contact: apisupport@mastercard.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Recipient Information about the recipient of the transaction. Conditional. If a 'pan' scheme is provided in the `recipient_account_uri`, this `recipient` object is required. If you provide this object, you must provide `first_name` and `last_name`.
type Recipient struct {
	// Required. The recipient's first name. Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./&#92;:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], length 1-40. If you cannot provide the actual value, you must provide the alternative value '#NOTINCLUDED'.
	FirstName string `json:"first_name"`
	// The recipient's middle name. Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./&#92;:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], length 1-40.
	MiddleName *string `json:"middle_name,omitempty"`
	// Required. The recipient's last name. Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./&#92;:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], length 1-40. If you cannot provide the actual value, you must provide the alternative value '#NOTINCLUDED'.
	LastName string `json:"last_name"`
	// The recipient's nationality as an ISO 3166-1 uppercase alpha-3 country code; see [Country and Currency Codes](https://developer.mastercard.com/mastercard-send-person-to-person/documentation/field-uris-codes/country-currency-codes/). For example, the United States of America is USA.
	Nationality *string `json:"nationality,omitempty"`
	// The recipient's date of birth in ISO 8601 full date format (YYYY-MM-DD). For example, 30 December 1999 is the value '1999-12-30'. Numeric and -, length 10.
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	// Identifies the recipient's account number type. This field is optional. Valid values: '00' Other, '01' RTN + Bank Account, '02' IBAN, '03' Card Account, '04' Email, '05' Phone Number, '06' Bank account number (BAN) + Bank Identification Сode (BIC), '07' Wallet ID, '08' Social Network ID. Numeric, 2 characters.
	AccountType *string              `json:"account_type,omitempty"`
	Address *RequestRecipientAddress `json:"address,omitempty"`
	// The recipient's phone number including country code. Numeric, length 1-15.
	Phone *string `json:"phone,omitempty"`
	// The recipient's email address. Alphanumeric Special [a-zA-Z0-9-@+.*$_], length 5-254.
	Email *string                `json:"email,omitempty"`
	GovernmentIds *GovernmentIds `json:"government_ids,omitempty"`
	// Name on the account. Applicable for non-card only. Allowable characters are alphanumeric and - / ? : ( ) . + # = ! % & * < > ; { @ ' \" characters. Details- Conditional, Required for non-card only, 1-40
	NameOnAccount *string `json:"name_on_account,omitempty"`
}

// NewRecipient instantiates a new Recipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipient(firstName string, lastName string) *Recipient {
	this := Recipient{}
	this.FirstName = firstName
	this.LastName = lastName
	return &this
}

// NewRecipientWithDefaults instantiates a new Recipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientWithDefaults() *Recipient {
	this := Recipient{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *Recipient) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *Recipient) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *Recipient) SetFirstName(v string) {
	o.FirstName = v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *Recipient) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetMiddleNameOk() (*string, bool) {
	if o == nil || o.MiddleName == nil {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *Recipient) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *Recipient) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value
func (o *Recipient) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *Recipient) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *Recipient) SetLastName(v string) {
	o.LastName = v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *Recipient) GetNationality() string {
	if o == nil || o.Nationality == nil {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetNationalityOk() (*string, bool) {
	if o == nil || o.Nationality == nil {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *Recipient) HasNationality() bool {
	if o != nil && o.Nationality != nil {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *Recipient) SetNationality(v string) {
	o.Nationality = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *Recipient) GetDateOfBirth() string {
	if o == nil || o.DateOfBirth == nil {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetDateOfBirthOk() (*string, bool) {
	if o == nil || o.DateOfBirth == nil {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *Recipient) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth != nil {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *Recipient) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *Recipient) GetAccountType() string {
	if o == nil || o.AccountType == nil {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetAccountTypeOk() (*string, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *Recipient) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *Recipient) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Recipient) GetAddress() RequestRecipientAddress {
	if o == nil || o.Address == nil {
		var ret RequestRecipientAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetAddressOk() (*RequestRecipientAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Recipient) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given RequestRecipientAddress and assigns it to the Address field.
func (o *Recipient) SetAddress(v RequestRecipientAddress) {
	o.Address = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *Recipient) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *Recipient) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *Recipient) SetPhone(v string) {
	o.Phone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Recipient) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Recipient) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Recipient) SetEmail(v string) {
	o.Email = &v
}

// GetGovernmentIds returns the GovernmentIds field value if set, zero value otherwise.
func (o *Recipient) GetGovernmentIds() GovernmentIds {
	if o == nil || o.GovernmentIds == nil {
		var ret GovernmentIds
		return ret
	}
	return *o.GovernmentIds
}

// GetGovernmentIdsOk returns a tuple with the GovernmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetGovernmentIdsOk() (*GovernmentIds, bool) {
	if o == nil || o.GovernmentIds == nil {
		return nil, false
	}
	return o.GovernmentIds, true
}

// HasGovernmentIds returns a boolean if a field has been set.
func (o *Recipient) HasGovernmentIds() bool {
	if o != nil && o.GovernmentIds != nil {
		return true
	}

	return false
}

// SetGovernmentIds gets a reference to the given GovernmentIds and assigns it to the GovernmentIds field.
func (o *Recipient) SetGovernmentIds(v GovernmentIds) {
	o.GovernmentIds = &v
}

// GetNameOnAccount returns the NameOnAccount field value if set, zero value otherwise.
func (o *Recipient) GetNameOnAccount() string {
	if o == nil || o.NameOnAccount == nil {
		var ret string
		return ret
	}
	return *o.NameOnAccount
}

// GetNameOnAccountOk returns a tuple with the NameOnAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipient) GetNameOnAccountOk() (*string, bool) {
	if o == nil || o.NameOnAccount == nil {
		return nil, false
	}
	return o.NameOnAccount, true
}

// HasNameOnAccount returns a boolean if a field has been set.
func (o *Recipient) HasNameOnAccount() bool {
	if o != nil && o.NameOnAccount != nil {
		return true
	}

	return false
}

// SetNameOnAccount gets a reference to the given string and assigns it to the NameOnAccount field.
func (o *Recipient) SetNameOnAccount(v string) {
	o.NameOnAccount = &v
}

func (o Recipient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["first_name"] = o.FirstName
	}
	if o.MiddleName != nil {
		toSerialize["middle_name"] = o.MiddleName
	}
	if true {
		toSerialize["last_name"] = o.LastName
	}
	if o.Nationality != nil {
		toSerialize["nationality"] = o.Nationality
	}
	if o.DateOfBirth != nil {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if o.AccountType != nil {
		toSerialize["account_type"] = o.AccountType
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.GovernmentIds != nil {
		toSerialize["government_ids"] = o.GovernmentIds
	}
	if o.NameOnAccount != nil {
		toSerialize["name_on_account"] = o.NameOnAccount
	}
	return json.Marshal(toSerialize)
}

type NullableRecipient struct {
	value *Recipient
	isSet bool
}

func (v NullableRecipient) Get() *Recipient {
	return v.value
}

func (v *NullableRecipient) Set(val *Recipient) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipient(val *Recipient) *NullableRecipient {
	return &NullableRecipient{value: val, isSet: true}
}

func (v NullableRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


