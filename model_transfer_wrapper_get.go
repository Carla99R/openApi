/*
Send Payment Transfer API

Mastercard Send Payment Transfer API

API version: 1.0.1
Contact: apisupport@mastercard.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransferWrapperGet Response details
type TransferWrapperGet struct {
	Transfer *TransferGet `json:"transfer,omitempty"`
}

// NewTransferWrapperGet instantiates a new TransferWrapperGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferWrapperGet() *TransferWrapperGet {
	this := TransferWrapperGet{}
	return &this
}

// NewTransferWrapperGetWithDefaults instantiates a new TransferWrapperGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferWrapperGetWithDefaults() *TransferWrapperGet {
	this := TransferWrapperGet{}
	return &this
}

// GetTransfer returns the Transfer field value if set, zero value otherwise.
func (o *TransferWrapperGet) GetTransfer() TransferGet {
	if o == nil || o.Transfer == nil {
		var ret TransferGet
		return ret
	}
	return *o.Transfer
}

// GetTransferOk returns a tuple with the Transfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferWrapperGet) GetTransferOk() (*TransferGet, bool) {
	if o == nil || o.Transfer == nil {
		return nil, false
	}
	return o.Transfer, true
}

// HasTransfer returns a boolean if a field has been set.
func (o *TransferWrapperGet) HasTransfer() bool {
	if o != nil && o.Transfer != nil {
		return true
	}

	return false
}

// SetTransfer gets a reference to the given TransferGet and assigns it to the Transfer field.
func (o *TransferWrapperGet) SetTransfer(v TransferGet) {
	o.Transfer = &v
}

func (o TransferWrapperGet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transfer != nil {
		toSerialize["transfer"] = o.Transfer
	}
	return json.Marshal(toSerialize)
}

type NullableTransferWrapperGet struct {
	value *TransferWrapperGet
	isSet bool
}

func (v NullableTransferWrapperGet) Get() *TransferWrapperGet {
	return v.value
}

func (v *NullableTransferWrapperGet) Set(val *TransferWrapperGet) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferWrapperGet) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferWrapperGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferWrapperGet(val *TransferWrapperGet) *NullableTransferWrapperGet {
	return &NullableTransferWrapperGet{value: val, isSet: true}
}

func (v NullableTransferWrapperGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferWrapperGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


