/*
Send Payment Transfer API

Mastercard Send Payment Transfer API

API version: 1.0.1
Contact: apisupport@mastercard.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransfersWrapper Response details
type TransfersWrapper struct {
	Transfers *Transfers `json:"transfers,omitempty"`
}

// NewTransfersWrapper instantiates a new TransfersWrapper object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransfersWrapper() *TransfersWrapper {
	this := TransfersWrapper{}
	return &this
}

// NewTransfersWrapperWithDefaults instantiates a new TransfersWrapper object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransfersWrapperWithDefaults() *TransfersWrapper {
	this := TransfersWrapper{}
	return &this
}

// GetTransfers returns the Transfers field value if set, zero value otherwise.
func (o *TransfersWrapper) GetTransfers() Transfers {
	if o == nil || o.Transfers == nil {
		var ret Transfers
		return ret
	}
	return *o.Transfers
}

// GetTransfersOk returns a tuple with the Transfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransfersWrapper) GetTransfersOk() (*Transfers, bool) {
	if o == nil || o.Transfers == nil {
		return nil, false
	}
	return o.Transfers, true
}

// HasTransfers returns a boolean if a field has been set.
func (o *TransfersWrapper) HasTransfers() bool {
	if o != nil && o.Transfers != nil {
		return true
	}

	return false
}

// SetTransfers gets a reference to the given Transfers and assigns it to the Transfers field.
func (o *TransfersWrapper) SetTransfers(v Transfers) {
	o.Transfers = &v
}

func (o TransfersWrapper) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transfers != nil {
		toSerialize["transfers"] = o.Transfers
	}
	return json.Marshal(toSerialize)
}

type NullableTransfersWrapper struct {
	value *TransfersWrapper
	isSet bool
}

func (v NullableTransfersWrapper) Get() *TransfersWrapper {
	return v.value
}

func (v *NullableTransfersWrapper) Set(val *TransfersWrapper) {
	v.value = val
	v.isSet = true
}

func (v NullableTransfersWrapper) IsSet() bool {
	return v.isSet
}

func (v *NullableTransfersWrapper) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransfersWrapper(val *TransfersWrapper) *NullableTransfersWrapper {
	return &NullableTransfersWrapper{value: val, isSet: true}
}

func (v NullableTransfersWrapper) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransfersWrapper) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


