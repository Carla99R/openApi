/*
Send Payment Transfer API

Mastercard Send Payment Transfer API

API version: 1.0.1
Contact: apisupport@mastercard.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransactionGet Transaction array
type TransactionGet struct {
	// The ID for the Payment Transaction. Alphanumeric and * , - . _ ~.
	Id *string `json:"id,omitempty"`
	// The type of resource being returned: transaction.
	ResourceType *string `json:"resource_type,omitempty"`
	// URI describing the receiving account. It will include masked account information (e.g. \"************9913\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account). See [Account URIs](https://developer.mastercard.com/mastercard-send-person-to-person/documentation/field-uris-codes/account-uris/).
	AccountUri *string                   `json:"account_uri,omitempty"`
	TransactionAmount *TransactionAmount `json:"transaction_amount,omitempty"`
	// Proposed network for the transaction.
	Network *string `json:"network,omitempty"`
	// Network Status Code.
	NetworkStatusCode *string `json:"network_status_code,omitempty"`
	// Network Status Description.
	NetworkStatusDescription *string `json:"network_status_description,omitempty"`
	// An estimate of when the funds might be available. Actual Deposit Availability is determined by the financial institution. One of: IMMEDIATE, SAME_DAY, NEXT_CALENDAR_DAY, NEXT_BUSINESS_DAY, TWO_TO_FIVE_BUSINESS_DAYS, or UNKNOWN.
	FundsAvailability *string `json:"funds_availability,omitempty"`
	// Type of the transaction. One of: FUNDING, PAYMENT, FUNDING_REVERSAL, or PAYMENT_REVERSAL.
	Type *string `json:"type,omitempty"`
	// Date and time the transaction was created, as an ISO 8601 timestamp in the format YYYY-MM-DDTHH:MM:SS±hh:mm. Refer to 'Date and Time Formats'.
	CreateTimestamp *string `json:"create_timestamp,omitempty"`
	// Status of the transfer. One of APPROVED, DECLINED, UNKNOWN, ERROR, PENDING.
	Status *string `json:"status,omitempty"`
	// Reason for status. One of APPROVED, DECLINED, UNKNOWN, ERROR, PENDING, FRAUD, CARD_EXPIRED, LIMIT_EXCEEDED.
	StatusReason *string `json:"status_reason,omitempty"`
	// Date and time the status was changed to its current value, as an ISO 8601 timestamp in the format YYYY-MM-DDTHH:MM:SS±hh:mm. Refer to 'Date and Time Formats'.
	StatusTimestamp *string `json:"status_timestamp,omitempty"`
	// Unique reference number that identifies the transaction at the network. Details- maxlength 24
	RetrievalReference *string `json:"retrieval_reference,omitempty"`
	// Unique system trace audit number for the transaction, the STAN (system trace audit number). Details- maxlength 6
	SystemTraceAuditNumber *string `json:"system_trace_audit_number,omitempty"`
	// Unique reference number for the transaction. Type: Alphanumeric [a-zA-Z 0-9], Maximum Length: 19
	UniqueReferenceNumber *string `json:"unique_reference_number,omitempty"`
}

// NewTransactionGet instantiates a new TransactionGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionGet() *TransactionGet {
	this := TransactionGet{}
	return &this
}

// NewTransactionGetWithDefaults instantiates a new TransactionGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionGetWithDefaults() *TransactionGet {
	this := TransactionGet{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransactionGet) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransactionGet) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TransactionGet) SetId(v string) {
	o.Id = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *TransactionGet) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *TransactionGet) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *TransactionGet) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetAccountUri returns the AccountUri field value if set, zero value otherwise.
func (o *TransactionGet) GetAccountUri() string {
	if o == nil || o.AccountUri == nil {
		var ret string
		return ret
	}
	return *o.AccountUri
}

// GetAccountUriOk returns a tuple with the AccountUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetAccountUriOk() (*string, bool) {
	if o == nil || o.AccountUri == nil {
		return nil, false
	}
	return o.AccountUri, true
}

// HasAccountUri returns a boolean if a field has been set.
func (o *TransactionGet) HasAccountUri() bool {
	if o != nil && o.AccountUri != nil {
		return true
	}

	return false
}

// SetAccountUri gets a reference to the given string and assigns it to the AccountUri field.
func (o *TransactionGet) SetAccountUri(v string) {
	o.AccountUri = &v
}

// GetTransactionAmount returns the TransactionAmount field value if set, zero value otherwise.
func (o *TransactionGet) GetTransactionAmount() TransactionAmount {
	if o == nil || o.TransactionAmount == nil {
		var ret TransactionAmount
		return ret
	}
	return *o.TransactionAmount
}

// GetTransactionAmountOk returns a tuple with the TransactionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetTransactionAmountOk() (*TransactionAmount, bool) {
	if o == nil || o.TransactionAmount == nil {
		return nil, false
	}
	return o.TransactionAmount, true
}

// HasTransactionAmount returns a boolean if a field has been set.
func (o *TransactionGet) HasTransactionAmount() bool {
	if o != nil && o.TransactionAmount != nil {
		return true
	}

	return false
}

// SetTransactionAmount gets a reference to the given TransactionAmount and assigns it to the TransactionAmount field.
func (o *TransactionGet) SetTransactionAmount(v TransactionAmount) {
	o.TransactionAmount = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *TransactionGet) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *TransactionGet) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *TransactionGet) SetNetwork(v string) {
	o.Network = &v
}

// GetNetworkStatusCode returns the NetworkStatusCode field value if set, zero value otherwise.
func (o *TransactionGet) GetNetworkStatusCode() string {
	if o == nil || o.NetworkStatusCode == nil {
		var ret string
		return ret
	}
	return *o.NetworkStatusCode
}

// GetNetworkStatusCodeOk returns a tuple with the NetworkStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetNetworkStatusCodeOk() (*string, bool) {
	if o == nil || o.NetworkStatusCode == nil {
		return nil, false
	}
	return o.NetworkStatusCode, true
}

// HasNetworkStatusCode returns a boolean if a field has been set.
func (o *TransactionGet) HasNetworkStatusCode() bool {
	if o != nil && o.NetworkStatusCode != nil {
		return true
	}

	return false
}

// SetNetworkStatusCode gets a reference to the given string and assigns it to the NetworkStatusCode field.
func (o *TransactionGet) SetNetworkStatusCode(v string) {
	o.NetworkStatusCode = &v
}

// GetNetworkStatusDescription returns the NetworkStatusDescription field value if set, zero value otherwise.
func (o *TransactionGet) GetNetworkStatusDescription() string {
	if o == nil || o.NetworkStatusDescription == nil {
		var ret string
		return ret
	}
	return *o.NetworkStatusDescription
}

// GetNetworkStatusDescriptionOk returns a tuple with the NetworkStatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetNetworkStatusDescriptionOk() (*string, bool) {
	if o == nil || o.NetworkStatusDescription == nil {
		return nil, false
	}
	return o.NetworkStatusDescription, true
}

// HasNetworkStatusDescription returns a boolean if a field has been set.
func (o *TransactionGet) HasNetworkStatusDescription() bool {
	if o != nil && o.NetworkStatusDescription != nil {
		return true
	}

	return false
}

// SetNetworkStatusDescription gets a reference to the given string and assigns it to the NetworkStatusDescription field.
func (o *TransactionGet) SetNetworkStatusDescription(v string) {
	o.NetworkStatusDescription = &v
}

// GetFundsAvailability returns the FundsAvailability field value if set, zero value otherwise.
func (o *TransactionGet) GetFundsAvailability() string {
	if o == nil || o.FundsAvailability == nil {
		var ret string
		return ret
	}
	return *o.FundsAvailability
}

// GetFundsAvailabilityOk returns a tuple with the FundsAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetFundsAvailabilityOk() (*string, bool) {
	if o == nil || o.FundsAvailability == nil {
		return nil, false
	}
	return o.FundsAvailability, true
}

// HasFundsAvailability returns a boolean if a field has been set.
func (o *TransactionGet) HasFundsAvailability() bool {
	if o != nil && o.FundsAvailability != nil {
		return true
	}

	return false
}

// SetFundsAvailability gets a reference to the given string and assigns it to the FundsAvailability field.
func (o *TransactionGet) SetFundsAvailability(v string) {
	o.FundsAvailability = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransactionGet) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransactionGet) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TransactionGet) SetType(v string) {
	o.Type = &v
}

// GetCreateTimestamp returns the CreateTimestamp field value if set, zero value otherwise.
func (o *TransactionGet) GetCreateTimestamp() string {
	if o == nil || o.CreateTimestamp == nil {
		var ret string
		return ret
	}
	return *o.CreateTimestamp
}

// GetCreateTimestampOk returns a tuple with the CreateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetCreateTimestampOk() (*string, bool) {
	if o == nil || o.CreateTimestamp == nil {
		return nil, false
	}
	return o.CreateTimestamp, true
}

// HasCreateTimestamp returns a boolean if a field has been set.
func (o *TransactionGet) HasCreateTimestamp() bool {
	if o != nil && o.CreateTimestamp != nil {
		return true
	}

	return false
}

// SetCreateTimestamp gets a reference to the given string and assigns it to the CreateTimestamp field.
func (o *TransactionGet) SetCreateTimestamp(v string) {
	o.CreateTimestamp = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TransactionGet) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TransactionGet) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TransactionGet) SetStatus(v string) {
	o.Status = &v
}

// GetStatusReason returns the StatusReason field value if set, zero value otherwise.
func (o *TransactionGet) GetStatusReason() string {
	if o == nil || o.StatusReason == nil {
		var ret string
		return ret
	}
	return *o.StatusReason
}

// GetStatusReasonOk returns a tuple with the StatusReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetStatusReasonOk() (*string, bool) {
	if o == nil || o.StatusReason == nil {
		return nil, false
	}
	return o.StatusReason, true
}

// HasStatusReason returns a boolean if a field has been set.
func (o *TransactionGet) HasStatusReason() bool {
	if o != nil && o.StatusReason != nil {
		return true
	}

	return false
}

// SetStatusReason gets a reference to the given string and assigns it to the StatusReason field.
func (o *TransactionGet) SetStatusReason(v string) {
	o.StatusReason = &v
}

// GetStatusTimestamp returns the StatusTimestamp field value if set, zero value otherwise.
func (o *TransactionGet) GetStatusTimestamp() string {
	if o == nil || o.StatusTimestamp == nil {
		var ret string
		return ret
	}
	return *o.StatusTimestamp
}

// GetStatusTimestampOk returns a tuple with the StatusTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetStatusTimestampOk() (*string, bool) {
	if o == nil || o.StatusTimestamp == nil {
		return nil, false
	}
	return o.StatusTimestamp, true
}

// HasStatusTimestamp returns a boolean if a field has been set.
func (o *TransactionGet) HasStatusTimestamp() bool {
	if o != nil && o.StatusTimestamp != nil {
		return true
	}

	return false
}

// SetStatusTimestamp gets a reference to the given string and assigns it to the StatusTimestamp field.
func (o *TransactionGet) SetStatusTimestamp(v string) {
	o.StatusTimestamp = &v
}

// GetRetrievalReference returns the RetrievalReference field value if set, zero value otherwise.
func (o *TransactionGet) GetRetrievalReference() string {
	if o == nil || o.RetrievalReference == nil {
		var ret string
		return ret
	}
	return *o.RetrievalReference
}

// GetRetrievalReferenceOk returns a tuple with the RetrievalReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetRetrievalReferenceOk() (*string, bool) {
	if o == nil || o.RetrievalReference == nil {
		return nil, false
	}
	return o.RetrievalReference, true
}

// HasRetrievalReference returns a boolean if a field has been set.
func (o *TransactionGet) HasRetrievalReference() bool {
	if o != nil && o.RetrievalReference != nil {
		return true
	}

	return false
}

// SetRetrievalReference gets a reference to the given string and assigns it to the RetrievalReference field.
func (o *TransactionGet) SetRetrievalReference(v string) {
	o.RetrievalReference = &v
}

// GetSystemTraceAuditNumber returns the SystemTraceAuditNumber field value if set, zero value otherwise.
func (o *TransactionGet) GetSystemTraceAuditNumber() string {
	if o == nil || o.SystemTraceAuditNumber == nil {
		var ret string
		return ret
	}
	return *o.SystemTraceAuditNumber
}

// GetSystemTraceAuditNumberOk returns a tuple with the SystemTraceAuditNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetSystemTraceAuditNumberOk() (*string, bool) {
	if o == nil || o.SystemTraceAuditNumber == nil {
		return nil, false
	}
	return o.SystemTraceAuditNumber, true
}

// HasSystemTraceAuditNumber returns a boolean if a field has been set.
func (o *TransactionGet) HasSystemTraceAuditNumber() bool {
	if o != nil && o.SystemTraceAuditNumber != nil {
		return true
	}

	return false
}

// SetSystemTraceAuditNumber gets a reference to the given string and assigns it to the SystemTraceAuditNumber field.
func (o *TransactionGet) SetSystemTraceAuditNumber(v string) {
	o.SystemTraceAuditNumber = &v
}

// GetUniqueReferenceNumber returns the UniqueReferenceNumber field value if set, zero value otherwise.
func (o *TransactionGet) GetUniqueReferenceNumber() string {
	if o == nil || o.UniqueReferenceNumber == nil {
		var ret string
		return ret
	}
	return *o.UniqueReferenceNumber
}

// GetUniqueReferenceNumberOk returns a tuple with the UniqueReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGet) GetUniqueReferenceNumberOk() (*string, bool) {
	if o == nil || o.UniqueReferenceNumber == nil {
		return nil, false
	}
	return o.UniqueReferenceNumber, true
}

// HasUniqueReferenceNumber returns a boolean if a field has been set.
func (o *TransactionGet) HasUniqueReferenceNumber() bool {
	if o != nil && o.UniqueReferenceNumber != nil {
		return true
	}

	return false
}

// SetUniqueReferenceNumber gets a reference to the given string and assigns it to the UniqueReferenceNumber field.
func (o *TransactionGet) SetUniqueReferenceNumber(v string) {
	o.UniqueReferenceNumber = &v
}

func (o TransactionGet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ResourceType != nil {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.AccountUri != nil {
		toSerialize["account_uri"] = o.AccountUri
	}
	if o.TransactionAmount != nil {
		toSerialize["transaction_amount"] = o.TransactionAmount
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.NetworkStatusCode != nil {
		toSerialize["network_status_code"] = o.NetworkStatusCode
	}
	if o.NetworkStatusDescription != nil {
		toSerialize["network_status_description"] = o.NetworkStatusDescription
	}
	if o.FundsAvailability != nil {
		toSerialize["funds_availability"] = o.FundsAvailability
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.CreateTimestamp != nil {
		toSerialize["create_timestamp"] = o.CreateTimestamp
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusReason != nil {
		toSerialize["status_reason"] = o.StatusReason
	}
	if o.StatusTimestamp != nil {
		toSerialize["status_timestamp"] = o.StatusTimestamp
	}
	if o.RetrievalReference != nil {
		toSerialize["retrieval_reference"] = o.RetrievalReference
	}
	if o.SystemTraceAuditNumber != nil {
		toSerialize["system_trace_audit_number"] = o.SystemTraceAuditNumber
	}
	if o.UniqueReferenceNumber != nil {
		toSerialize["unique_reference_number"] = o.UniqueReferenceNumber
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionGet struct {
	value *TransactionGet
	isSet bool
}

func (v NullableTransactionGet) Get() *TransactionGet {
	return v.value
}

func (v *NullableTransactionGet) Set(val *TransactionGet) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionGet) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionGet(val *TransactionGet) *NullableTransactionGet {
	return &NullableTransactionGet{value: val, isSet: true}
}

func (v NullableTransactionGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


