/*
Send Payment Transfer API

Mastercard Send Payment Transfer API

API version: 1.0.1
Contact: apisupport@mastercard.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransferGet Transfer array
type TransferGet struct {
	// The system-generated Transfer ID for the payment transfer. Alphanumeric and * , - . _ ~.
	Id *string `json:"id,omitempty"`
	// The type of resource being returned: transfer.
	ResourceType *string `json:"resource_type,omitempty"`
	// The partner-assigned unique reference identifier for the payment transfer. Alphanumeric and * , - . _ ~. Length 6-40.
	TransferReference *string `json:"transfer_reference,omitempty"`
	// Payment type of the transfer: * A2A = General Transfer to Own Account * ACO = Agent Cash Out * C2C = Cash to Card * CBP = Payment of Own Credit Card Bill * P2P = General Person-to-Person Transfer
	PaymentType *string `json:"payment_type,omitempty"`
	// Country where the payment originated from as an ISO 3166-1 alpha-3 country code, in uppercase. Details- Alpha, Length: 3
	PaymentOriginationCountry *string `json:"payment_origination_country,omitempty"`
	// URI describing the sending account. It will include masked account information (e.g. \"************9921\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account). See [Account URIs](https://developer.mastercard.com/mastercard-send-person-to-person/documentation/field-uris-codes/account-uris/).
	SenderAccountUri *string `json:"sender_account_uri,omitempty"`
	Sender *P2pSender        `json:"sender,omitempty"`
	// Funding source must contain one of the following: CREDIT, DEBIT, PREPAID, DEPOSIT_ACCOUNT, MOBILE_MONEY_ACCOUNT, CASH or OTHER.
	FundingSource *string `json:"funding_source,omitempty"`
	// Purpose of the transaction. Valid values: '00' Family Support, '01' Regular Labor Transfers (expatriates), '02' Travel & Tourism, '03' Education, '04' Hospitalization & Medical Treatment, '05' Emergency Need, '06' Savings, '07' Gifts, '08' Other, '09' Salary, '10' Crowd lending, '11' Crypto currency, '12' Refund to original card, '13' Refund to new card. String, numeric, length 2.
	TransactionPurpose *string `json:"transaction_purpose,omitempty"`
	// URI describing the receiving account. It will include masked account information (e.g. \"************9913\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account). See [Account URIs](https://developer.mastercard.com/mastercard-send-person-to-person/documentation/field-uris-codes/account-uris/).
	RecipientAccountUri *string `json:"recipient_account_uri,omitempty"`
	Recipient *P2pRecipient     `json:"recipient,omitempty"`
	// This field is not used at this time. The Sanctions Screening Service is suspended until further notice.
	SanctionScreeningOverride *bool `json:"sanction_screening_override,omitempty"`
	TransferAmount *TransferAmount  `json:"transfer_amount,omitempty"`
	// Date and time the original transfer was created, as an ISO 8601 timestamp in the format YYYY-MM-DDTHH:MM:SS±hh:mm. Refer to 'Date and Time Formats'.
	Created *string                           `json:"created,omitempty"`
	TransactionHistory *TransactionHistoryGet `json:"transaction_history,omitempty"`
	ReconciliationData *P2pReconciliationData `json:"reconciliation_data,omitempty"`
	// The statement descriptor is the value that will be displayed on the recipient's bank or card statement. It consists of two parts: the prefix and the content. The prefix is a short string typically used to identify the partner. The appended <prefix>*<content> will be displayed on the recipient's statement. Note: While most financial institutions display this information consistently, some may display it incorrectly or not at all.
	StatementDescriptor *string `json:"statement_descriptor,omitempty"`
	// Initiation channel of the transfer request. Values: WEB, MOBILE, BANK, KIOSK.
	Channel *string `json:"channel,omitempty"`
	// The serial number of a device that initiated the transfer.
	DeviceId *string `json:"device_id,omitempty"`
	// Location where the transaction is initiated.
	Location *string `json:"location,omitempty"`
	// Original status of the transfer. One of APPROVED, DECLINED, UNKNOWN, ERROR, PENDING, CANCELLED. CANCELLED is possible for non-card transactions (not applicable to card).
	OriginalStatus *string `json:"original_status,omitempty"`
	// Status of the transfer. One of APPROVED, DECLINED, UNKNOWN, ERROR, PENDING, REVERSED, CANCELLED. PENDING indicates the transaction is still in progress. If you get PENDING for a card transaction, retry with another GET request. CANCELLED is possible for non-card transactions (not applicable to card).
	Status *string `json:"status,omitempty"`
	// Date and time the status was changed to its current value, as an ISO 8601 timestamp in the format YYYY-MM-DDTHH:MM:SS±hh:mm. Refer to 'Date and Time Formats'.
	StatusTimestamp *string          `json:"status_timestamp,omitempty"`
	Participant *ResponseParticipant `json:"participant,omitempty"`
	// Type of payment instruction to send. Applicable for non-card only. Values: SIP - Standard immediate payment (default), FDP - Future dated payment
	TransferPriority *string `json:"transfer_priority,omitempty"`
	// Unique identifier of the payment within the scheme. 42 character string, in which the last five characters are almost always spaces. Applicable for non-card only.
	FasterPaymentsId *string `json:"faster_payments_id,omitempty"`
	// Unique identifier of the payment the notification relates to. Applicable for non-card only.
	PaymentUid *string `json:"payment_uid,omitempty"`
	// If a Canadian OI, TI or Reseller has elected to include Debit Mastercard in scope, the value should be true. Mastercard will decline a transaction if the value is not passed as true and it is a Canada DMC (Network Response: '81' Domestic Debit Transaction Not Allowed).
	CanadaDomesticIndicator *bool `json:"canada_domestic_indicator,omitempty"`
}

// NewTransferGet instantiates a new TransferGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferGet() *TransferGet {
	this := TransferGet{}
	return &this
}

// NewTransferGetWithDefaults instantiates a new TransferGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferGetWithDefaults() *TransferGet {
	this := TransferGet{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransferGet) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransferGet) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TransferGet) SetId(v string) {
	o.Id = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *TransferGet) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *TransferGet) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *TransferGet) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetTransferReference returns the TransferReference field value if set, zero value otherwise.
func (o *TransferGet) GetTransferReference() string {
	if o == nil || o.TransferReference == nil {
		var ret string
		return ret
	}
	return *o.TransferReference
}

// GetTransferReferenceOk returns a tuple with the TransferReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetTransferReferenceOk() (*string, bool) {
	if o == nil || o.TransferReference == nil {
		return nil, false
	}
	return o.TransferReference, true
}

// HasTransferReference returns a boolean if a field has been set.
func (o *TransferGet) HasTransferReference() bool {
	if o != nil && o.TransferReference != nil {
		return true
	}

	return false
}

// SetTransferReference gets a reference to the given string and assigns it to the TransferReference field.
func (o *TransferGet) SetTransferReference(v string) {
	o.TransferReference = &v
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise.
func (o *TransferGet) GetPaymentType() string {
	if o == nil || o.PaymentType == nil {
		var ret string
		return ret
	}
	return *o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetPaymentTypeOk() (*string, bool) {
	if o == nil || o.PaymentType == nil {
		return nil, false
	}
	return o.PaymentType, true
}

// HasPaymentType returns a boolean if a field has been set.
func (o *TransferGet) HasPaymentType() bool {
	if o != nil && o.PaymentType != nil {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given string and assigns it to the PaymentType field.
func (o *TransferGet) SetPaymentType(v string) {
	o.PaymentType = &v
}

// GetPaymentOriginationCountry returns the PaymentOriginationCountry field value if set, zero value otherwise.
func (o *TransferGet) GetPaymentOriginationCountry() string {
	if o == nil || o.PaymentOriginationCountry == nil {
		var ret string
		return ret
	}
	return *o.PaymentOriginationCountry
}

// GetPaymentOriginationCountryOk returns a tuple with the PaymentOriginationCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetPaymentOriginationCountryOk() (*string, bool) {
	if o == nil || o.PaymentOriginationCountry == nil {
		return nil, false
	}
	return o.PaymentOriginationCountry, true
}

// HasPaymentOriginationCountry returns a boolean if a field has been set.
func (o *TransferGet) HasPaymentOriginationCountry() bool {
	if o != nil && o.PaymentOriginationCountry != nil {
		return true
	}

	return false
}

// SetPaymentOriginationCountry gets a reference to the given string and assigns it to the PaymentOriginationCountry field.
func (o *TransferGet) SetPaymentOriginationCountry(v string) {
	o.PaymentOriginationCountry = &v
}

// GetSenderAccountUri returns the SenderAccountUri field value if set, zero value otherwise.
func (o *TransferGet) GetSenderAccountUri() string {
	if o == nil || o.SenderAccountUri == nil {
		var ret string
		return ret
	}
	return *o.SenderAccountUri
}

// GetSenderAccountUriOk returns a tuple with the SenderAccountUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetSenderAccountUriOk() (*string, bool) {
	if o == nil || o.SenderAccountUri == nil {
		return nil, false
	}
	return o.SenderAccountUri, true
}

// HasSenderAccountUri returns a boolean if a field has been set.
func (o *TransferGet) HasSenderAccountUri() bool {
	if o != nil && o.SenderAccountUri != nil {
		return true
	}

	return false
}

// SetSenderAccountUri gets a reference to the given string and assigns it to the SenderAccountUri field.
func (o *TransferGet) SetSenderAccountUri(v string) {
	o.SenderAccountUri = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *TransferGet) GetSender() P2pSender {
	if o == nil || o.Sender == nil {
		var ret P2pSender
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetSenderOk() (*P2pSender, bool) {
	if o == nil || o.Sender == nil {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *TransferGet) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given P2pSender and assigns it to the Sender field.
func (o *TransferGet) SetSender(v P2pSender) {
	o.Sender = &v
}

// GetFundingSource returns the FundingSource field value if set, zero value otherwise.
func (o *TransferGet) GetFundingSource() string {
	if o == nil || o.FundingSource == nil {
		var ret string
		return ret
	}
	return *o.FundingSource
}

// GetFundingSourceOk returns a tuple with the FundingSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetFundingSourceOk() (*string, bool) {
	if o == nil || o.FundingSource == nil {
		return nil, false
	}
	return o.FundingSource, true
}

// HasFundingSource returns a boolean if a field has been set.
func (o *TransferGet) HasFundingSource() bool {
	if o != nil && o.FundingSource != nil {
		return true
	}

	return false
}

// SetFundingSource gets a reference to the given string and assigns it to the FundingSource field.
func (o *TransferGet) SetFundingSource(v string) {
	o.FundingSource = &v
}

// GetTransactionPurpose returns the TransactionPurpose field value if set, zero value otherwise.
func (o *TransferGet) GetTransactionPurpose() string {
	if o == nil || o.TransactionPurpose == nil {
		var ret string
		return ret
	}
	return *o.TransactionPurpose
}

// GetTransactionPurposeOk returns a tuple with the TransactionPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetTransactionPurposeOk() (*string, bool) {
	if o == nil || o.TransactionPurpose == nil {
		return nil, false
	}
	return o.TransactionPurpose, true
}

// HasTransactionPurpose returns a boolean if a field has been set.
func (o *TransferGet) HasTransactionPurpose() bool {
	if o != nil && o.TransactionPurpose != nil {
		return true
	}

	return false
}

// SetTransactionPurpose gets a reference to the given string and assigns it to the TransactionPurpose field.
func (o *TransferGet) SetTransactionPurpose(v string) {
	o.TransactionPurpose = &v
}

// GetRecipientAccountUri returns the RecipientAccountUri field value if set, zero value otherwise.
func (o *TransferGet) GetRecipientAccountUri() string {
	if o == nil || o.RecipientAccountUri == nil {
		var ret string
		return ret
	}
	return *o.RecipientAccountUri
}

// GetRecipientAccountUriOk returns a tuple with the RecipientAccountUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetRecipientAccountUriOk() (*string, bool) {
	if o == nil || o.RecipientAccountUri == nil {
		return nil, false
	}
	return o.RecipientAccountUri, true
}

// HasRecipientAccountUri returns a boolean if a field has been set.
func (o *TransferGet) HasRecipientAccountUri() bool {
	if o != nil && o.RecipientAccountUri != nil {
		return true
	}

	return false
}

// SetRecipientAccountUri gets a reference to the given string and assigns it to the RecipientAccountUri field.
func (o *TransferGet) SetRecipientAccountUri(v string) {
	o.RecipientAccountUri = &v
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *TransferGet) GetRecipient() P2pRecipient {
	if o == nil || o.Recipient == nil {
		var ret P2pRecipient
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetRecipientOk() (*P2pRecipient, bool) {
	if o == nil || o.Recipient == nil {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *TransferGet) HasRecipient() bool {
	if o != nil && o.Recipient != nil {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given P2pRecipient and assigns it to the Recipient field.
func (o *TransferGet) SetRecipient(v P2pRecipient) {
	o.Recipient = &v
}

// GetSanctionScreeningOverride returns the SanctionScreeningOverride field value if set, zero value otherwise.
func (o *TransferGet) GetSanctionScreeningOverride() bool {
	if o == nil || o.SanctionScreeningOverride == nil {
		var ret bool
		return ret
	}
	return *o.SanctionScreeningOverride
}

// GetSanctionScreeningOverrideOk returns a tuple with the SanctionScreeningOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetSanctionScreeningOverrideOk() (*bool, bool) {
	if o == nil || o.SanctionScreeningOverride == nil {
		return nil, false
	}
	return o.SanctionScreeningOverride, true
}

// HasSanctionScreeningOverride returns a boolean if a field has been set.
func (o *TransferGet) HasSanctionScreeningOverride() bool {
	if o != nil && o.SanctionScreeningOverride != nil {
		return true
	}

	return false
}

// SetSanctionScreeningOverride gets a reference to the given bool and assigns it to the SanctionScreeningOverride field.
func (o *TransferGet) SetSanctionScreeningOverride(v bool) {
	o.SanctionScreeningOverride = &v
}

// GetTransferAmount returns the TransferAmount field value if set, zero value otherwise.
func (o *TransferGet) GetTransferAmount() TransferAmount {
	if o == nil || o.TransferAmount == nil {
		var ret TransferAmount
		return ret
	}
	return *o.TransferAmount
}

// GetTransferAmountOk returns a tuple with the TransferAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetTransferAmountOk() (*TransferAmount, bool) {
	if o == nil || o.TransferAmount == nil {
		return nil, false
	}
	return o.TransferAmount, true
}

// HasTransferAmount returns a boolean if a field has been set.
func (o *TransferGet) HasTransferAmount() bool {
	if o != nil && o.TransferAmount != nil {
		return true
	}

	return false
}

// SetTransferAmount gets a reference to the given TransferAmount and assigns it to the TransferAmount field.
func (o *TransferGet) SetTransferAmount(v TransferAmount) {
	o.TransferAmount = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *TransferGet) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *TransferGet) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *TransferGet) SetCreated(v string) {
	o.Created = &v
}

// GetTransactionHistory returns the TransactionHistory field value if set, zero value otherwise.
func (o *TransferGet) GetTransactionHistory() TransactionHistoryGet {
	if o == nil || o.TransactionHistory == nil {
		var ret TransactionHistoryGet
		return ret
	}
	return *o.TransactionHistory
}

// GetTransactionHistoryOk returns a tuple with the TransactionHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetTransactionHistoryOk() (*TransactionHistoryGet, bool) {
	if o == nil || o.TransactionHistory == nil {
		return nil, false
	}
	return o.TransactionHistory, true
}

// HasTransactionHistory returns a boolean if a field has been set.
func (o *TransferGet) HasTransactionHistory() bool {
	if o != nil && o.TransactionHistory != nil {
		return true
	}

	return false
}

// SetTransactionHistory gets a reference to the given TransactionHistoryGet and assigns it to the TransactionHistory field.
func (o *TransferGet) SetTransactionHistory(v TransactionHistoryGet) {
	o.TransactionHistory = &v
}

// GetReconciliationData returns the ReconciliationData field value if set, zero value otherwise.
func (o *TransferGet) GetReconciliationData() P2pReconciliationData {
	if o == nil || o.ReconciliationData == nil {
		var ret P2pReconciliationData
		return ret
	}
	return *o.ReconciliationData
}

// GetReconciliationDataOk returns a tuple with the ReconciliationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetReconciliationDataOk() (*P2pReconciliationData, bool) {
	if o == nil || o.ReconciliationData == nil {
		return nil, false
	}
	return o.ReconciliationData, true
}

// HasReconciliationData returns a boolean if a field has been set.
func (o *TransferGet) HasReconciliationData() bool {
	if o != nil && o.ReconciliationData != nil {
		return true
	}

	return false
}

// SetReconciliationData gets a reference to the given P2pReconciliationData and assigns it to the ReconciliationData field.
func (o *TransferGet) SetReconciliationData(v P2pReconciliationData) {
	o.ReconciliationData = &v
}

// GetStatementDescriptor returns the StatementDescriptor field value if set, zero value otherwise.
func (o *TransferGet) GetStatementDescriptor() string {
	if o == nil || o.StatementDescriptor == nil {
		var ret string
		return ret
	}
	return *o.StatementDescriptor
}

// GetStatementDescriptorOk returns a tuple with the StatementDescriptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetStatementDescriptorOk() (*string, bool) {
	if o == nil || o.StatementDescriptor == nil {
		return nil, false
	}
	return o.StatementDescriptor, true
}

// HasStatementDescriptor returns a boolean if a field has been set.
func (o *TransferGet) HasStatementDescriptor() bool {
	if o != nil && o.StatementDescriptor != nil {
		return true
	}

	return false
}

// SetStatementDescriptor gets a reference to the given string and assigns it to the StatementDescriptor field.
func (o *TransferGet) SetStatementDescriptor(v string) {
	o.StatementDescriptor = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *TransferGet) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *TransferGet) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *TransferGet) SetChannel(v string) {
	o.Channel = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *TransferGet) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *TransferGet) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *TransferGet) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *TransferGet) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *TransferGet) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *TransferGet) SetLocation(v string) {
	o.Location = &v
}

// GetOriginalStatus returns the OriginalStatus field value if set, zero value otherwise.
func (o *TransferGet) GetOriginalStatus() string {
	if o == nil || o.OriginalStatus == nil {
		var ret string
		return ret
	}
	return *o.OriginalStatus
}

// GetOriginalStatusOk returns a tuple with the OriginalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetOriginalStatusOk() (*string, bool) {
	if o == nil || o.OriginalStatus == nil {
		return nil, false
	}
	return o.OriginalStatus, true
}

// HasOriginalStatus returns a boolean if a field has been set.
func (o *TransferGet) HasOriginalStatus() bool {
	if o != nil && o.OriginalStatus != nil {
		return true
	}

	return false
}

// SetOriginalStatus gets a reference to the given string and assigns it to the OriginalStatus field.
func (o *TransferGet) SetOriginalStatus(v string) {
	o.OriginalStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TransferGet) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TransferGet) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TransferGet) SetStatus(v string) {
	o.Status = &v
}

// GetStatusTimestamp returns the StatusTimestamp field value if set, zero value otherwise.
func (o *TransferGet) GetStatusTimestamp() string {
	if o == nil || o.StatusTimestamp == nil {
		var ret string
		return ret
	}
	return *o.StatusTimestamp
}

// GetStatusTimestampOk returns a tuple with the StatusTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetStatusTimestampOk() (*string, bool) {
	if o == nil || o.StatusTimestamp == nil {
		return nil, false
	}
	return o.StatusTimestamp, true
}

// HasStatusTimestamp returns a boolean if a field has been set.
func (o *TransferGet) HasStatusTimestamp() bool {
	if o != nil && o.StatusTimestamp != nil {
		return true
	}

	return false
}

// SetStatusTimestamp gets a reference to the given string and assigns it to the StatusTimestamp field.
func (o *TransferGet) SetStatusTimestamp(v string) {
	o.StatusTimestamp = &v
}

// GetParticipant returns the Participant field value if set, zero value otherwise.
func (o *TransferGet) GetParticipant() ResponseParticipant {
	if o == nil || o.Participant == nil {
		var ret ResponseParticipant
		return ret
	}
	return *o.Participant
}

// GetParticipantOk returns a tuple with the Participant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetParticipantOk() (*ResponseParticipant, bool) {
	if o == nil || o.Participant == nil {
		return nil, false
	}
	return o.Participant, true
}

// HasParticipant returns a boolean if a field has been set.
func (o *TransferGet) HasParticipant() bool {
	if o != nil && o.Participant != nil {
		return true
	}

	return false
}

// SetParticipant gets a reference to the given ResponseParticipant and assigns it to the Participant field.
func (o *TransferGet) SetParticipant(v ResponseParticipant) {
	o.Participant = &v
}

// GetTransferPriority returns the TransferPriority field value if set, zero value otherwise.
func (o *TransferGet) GetTransferPriority() string {
	if o == nil || o.TransferPriority == nil {
		var ret string
		return ret
	}
	return *o.TransferPriority
}

// GetTransferPriorityOk returns a tuple with the TransferPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetTransferPriorityOk() (*string, bool) {
	if o == nil || o.TransferPriority == nil {
		return nil, false
	}
	return o.TransferPriority, true
}

// HasTransferPriority returns a boolean if a field has been set.
func (o *TransferGet) HasTransferPriority() bool {
	if o != nil && o.TransferPriority != nil {
		return true
	}

	return false
}

// SetTransferPriority gets a reference to the given string and assigns it to the TransferPriority field.
func (o *TransferGet) SetTransferPriority(v string) {
	o.TransferPriority = &v
}

// GetFasterPaymentsId returns the FasterPaymentsId field value if set, zero value otherwise.
func (o *TransferGet) GetFasterPaymentsId() string {
	if o == nil || o.FasterPaymentsId == nil {
		var ret string
		return ret
	}
	return *o.FasterPaymentsId
}

// GetFasterPaymentsIdOk returns a tuple with the FasterPaymentsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetFasterPaymentsIdOk() (*string, bool) {
	if o == nil || o.FasterPaymentsId == nil {
		return nil, false
	}
	return o.FasterPaymentsId, true
}

// HasFasterPaymentsId returns a boolean if a field has been set.
func (o *TransferGet) HasFasterPaymentsId() bool {
	if o != nil && o.FasterPaymentsId != nil {
		return true
	}

	return false
}

// SetFasterPaymentsId gets a reference to the given string and assigns it to the FasterPaymentsId field.
func (o *TransferGet) SetFasterPaymentsId(v string) {
	o.FasterPaymentsId = &v
}

// GetPaymentUid returns the PaymentUid field value if set, zero value otherwise.
func (o *TransferGet) GetPaymentUid() string {
	if o == nil || o.PaymentUid == nil {
		var ret string
		return ret
	}
	return *o.PaymentUid
}

// GetPaymentUidOk returns a tuple with the PaymentUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetPaymentUidOk() (*string, bool) {
	if o == nil || o.PaymentUid == nil {
		return nil, false
	}
	return o.PaymentUid, true
}

// HasPaymentUid returns a boolean if a field has been set.
func (o *TransferGet) HasPaymentUid() bool {
	if o != nil && o.PaymentUid != nil {
		return true
	}

	return false
}

// SetPaymentUid gets a reference to the given string and assigns it to the PaymentUid field.
func (o *TransferGet) SetPaymentUid(v string) {
	o.PaymentUid = &v
}

// GetCanadaDomesticIndicator returns the CanadaDomesticIndicator field value if set, zero value otherwise.
func (o *TransferGet) GetCanadaDomesticIndicator() bool {
	if o == nil || o.CanadaDomesticIndicator == nil {
		var ret bool
		return ret
	}
	return *o.CanadaDomesticIndicator
}

// GetCanadaDomesticIndicatorOk returns a tuple with the CanadaDomesticIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferGet) GetCanadaDomesticIndicatorOk() (*bool, bool) {
	if o == nil || o.CanadaDomesticIndicator == nil {
		return nil, false
	}
	return o.CanadaDomesticIndicator, true
}

// HasCanadaDomesticIndicator returns a boolean if a field has been set.
func (o *TransferGet) HasCanadaDomesticIndicator() bool {
	if o != nil && o.CanadaDomesticIndicator != nil {
		return true
	}

	return false
}

// SetCanadaDomesticIndicator gets a reference to the given bool and assigns it to the CanadaDomesticIndicator field.
func (o *TransferGet) SetCanadaDomesticIndicator(v bool) {
	o.CanadaDomesticIndicator = &v
}

func (o TransferGet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ResourceType != nil {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.TransferReference != nil {
		toSerialize["transfer_reference"] = o.TransferReference
	}
	if o.PaymentType != nil {
		toSerialize["payment_type"] = o.PaymentType
	}
	if o.PaymentOriginationCountry != nil {
		toSerialize["payment_origination_country"] = o.PaymentOriginationCountry
	}
	if o.SenderAccountUri != nil {
		toSerialize["sender_account_uri"] = o.SenderAccountUri
	}
	if o.Sender != nil {
		toSerialize["sender"] = o.Sender
	}
	if o.FundingSource != nil {
		toSerialize["funding_source"] = o.FundingSource
	}
	if o.TransactionPurpose != nil {
		toSerialize["transaction_purpose"] = o.TransactionPurpose
	}
	if o.RecipientAccountUri != nil {
		toSerialize["recipient_account_uri"] = o.RecipientAccountUri
	}
	if o.Recipient != nil {
		toSerialize["recipient"] = o.Recipient
	}
	if o.SanctionScreeningOverride != nil {
		toSerialize["sanction_screening_override"] = o.SanctionScreeningOverride
	}
	if o.TransferAmount != nil {
		toSerialize["transfer_amount"] = o.TransferAmount
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.TransactionHistory != nil {
		toSerialize["transaction_history"] = o.TransactionHistory
	}
	if o.ReconciliationData != nil {
		toSerialize["reconciliation_data"] = o.ReconciliationData
	}
	if o.StatementDescriptor != nil {
		toSerialize["statement_descriptor"] = o.StatementDescriptor
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.DeviceId != nil {
		toSerialize["device_id"] = o.DeviceId
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.OriginalStatus != nil {
		toSerialize["original_status"] = o.OriginalStatus
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusTimestamp != nil {
		toSerialize["status_timestamp"] = o.StatusTimestamp
	}
	if o.Participant != nil {
		toSerialize["participant"] = o.Participant
	}
	if o.TransferPriority != nil {
		toSerialize["transfer_priority"] = o.TransferPriority
	}
	if o.FasterPaymentsId != nil {
		toSerialize["faster_payments_id"] = o.FasterPaymentsId
	}
	if o.PaymentUid != nil {
		toSerialize["payment_uid"] = o.PaymentUid
	}
	if o.CanadaDomesticIndicator != nil {
		toSerialize["canada_domestic_indicator"] = o.CanadaDomesticIndicator
	}
	return json.Marshal(toSerialize)
}

type NullableTransferGet struct {
	value *TransferGet
	isSet bool
}

func (v NullableTransferGet) Get() *TransferGet {
	return v.value
}

func (v *NullableTransferGet) Set(val *TransferGet) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferGet) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferGet(val *TransferGet) *NullableTransferGet {
	return &NullableTransferGet{value: val, isSet: true}
}

func (v NullableTransferGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


