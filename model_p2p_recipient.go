/*
Send Payment Transfer API

Mastercard Send Payment Transfer API

API version: 1.0.1
Contact: apisupport@mastercard.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// P2pRecipient Information about the recipient of the transaction.
type P2pRecipient struct {
	// The recipient's first name. Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./&#92;:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], length 1-40.
	FirstName *string `json:"first_name,omitempty"`
	// The recipient's middle name. Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./&#92;:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], length 1-40.
	MiddleName *string `json:"middle_name,omitempty"`
	// The recipient's last name. Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./&#92;:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], length 1-40.
	LastName *string `json:"last_name,omitempty"`
	// The recipient's nationality as an ISO 3166-1 uppercase alpha-3 country code; see [Country and Currency Codes](https://developer.mastercard.com/mastercard-send-person-to-person/documentation/field-uris-codes/country-currency-codes/). For example, the United States of America is USA.
	Nationality *string `json:"nationality,omitempty"`
	// The recipient's date of birth in ISO 8601 full date format (YYYY-MM-DD). For example, 30 December 1999 is the value '1999-12-30'. Numeric and -, length 10.
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	// Identifies the recipient's account number type. This field is optional. Valid values: '00' Other, '01' RTN + Bank Account, '02' IBAN, '03' Card Account, '04' Email, '05' Phone Number, '06' Bank account number (BAN) + Bank Identification Сode (BIC), '07' Wallet ID, '08' Social Network ID. Numeric, 2 characters.
	AccountType *string                  `json:"account_type,omitempty"`
	Address *P2pResponseRecipientAddress `json:"address,omitempty"`
	// The recipient's phone number including country code. Numeric, length 1-15.
	Phone *string `json:"phone,omitempty"`
	// The recipient's email address. Alphanumeric Special [a-zA-Z0-9-@+.*$_], length 5-254.
	Email *string                        `json:"email,omitempty"`
	GovernmentIds *GovernmentIdsResponse `json:"government_ids,omitempty"`
	// Name on the account. Applicable for non-card only. Allowable characters are alphanumeric and - / ? : ( ) . + # = ! % & * < > ; { @ ' \" characters. Details- 1-40
	NameOnAccount *string `json:"name_on_account,omitempty"`
	// This field is not used at this time. The Sanctions Screening Service is suspended until further notice.
	SanctionScore *string `json:"sanction_score,omitempty"`
}

// NewP2pRecipient instantiates a new P2pRecipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewP2pRecipient() *P2pRecipient {
	this := P2pRecipient{}
	return &this
}

// NewP2pRecipientWithDefaults instantiates a new P2pRecipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewP2pRecipientWithDefaults() *P2pRecipient {
	this := P2pRecipient{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *P2pRecipient) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *P2pRecipient) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *P2pRecipient) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *P2pRecipient) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetMiddleNameOk() (*string, bool) {
	if o == nil || o.MiddleName == nil {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *P2pRecipient) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *P2pRecipient) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *P2pRecipient) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *P2pRecipient) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *P2pRecipient) SetLastName(v string) {
	o.LastName = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *P2pRecipient) GetNationality() string {
	if o == nil || o.Nationality == nil {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetNationalityOk() (*string, bool) {
	if o == nil || o.Nationality == nil {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *P2pRecipient) HasNationality() bool {
	if o != nil && o.Nationality != nil {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *P2pRecipient) SetNationality(v string) {
	o.Nationality = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *P2pRecipient) GetDateOfBirth() string {
	if o == nil || o.DateOfBirth == nil {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetDateOfBirthOk() (*string, bool) {
	if o == nil || o.DateOfBirth == nil {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *P2pRecipient) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth != nil {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *P2pRecipient) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *P2pRecipient) GetAccountType() string {
	if o == nil || o.AccountType == nil {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetAccountTypeOk() (*string, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *P2pRecipient) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *P2pRecipient) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *P2pRecipient) GetAddress() P2pResponseRecipientAddress {
	if o == nil || o.Address == nil {
		var ret P2pResponseRecipientAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetAddressOk() (*P2pResponseRecipientAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *P2pRecipient) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given P2pResponseRecipientAddress and assigns it to the Address field.
func (o *P2pRecipient) SetAddress(v P2pResponseRecipientAddress) {
	o.Address = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *P2pRecipient) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *P2pRecipient) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *P2pRecipient) SetPhone(v string) {
	o.Phone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *P2pRecipient) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *P2pRecipient) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *P2pRecipient) SetEmail(v string) {
	o.Email = &v
}

// GetGovernmentIds returns the GovernmentIds field value if set, zero value otherwise.
func (o *P2pRecipient) GetGovernmentIds() GovernmentIdsResponse {
	if o == nil || o.GovernmentIds == nil {
		var ret GovernmentIdsResponse
		return ret
	}
	return *o.GovernmentIds
}

// GetGovernmentIdsOk returns a tuple with the GovernmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetGovernmentIdsOk() (*GovernmentIdsResponse, bool) {
	if o == nil || o.GovernmentIds == nil {
		return nil, false
	}
	return o.GovernmentIds, true
}

// HasGovernmentIds returns a boolean if a field has been set.
func (o *P2pRecipient) HasGovernmentIds() bool {
	if o != nil && o.GovernmentIds != nil {
		return true
	}

	return false
}

// SetGovernmentIds gets a reference to the given GovernmentIdsResponse and assigns it to the GovernmentIds field.
func (o *P2pRecipient) SetGovernmentIds(v GovernmentIdsResponse) {
	o.GovernmentIds = &v
}

// GetNameOnAccount returns the NameOnAccount field value if set, zero value otherwise.
func (o *P2pRecipient) GetNameOnAccount() string {
	if o == nil || o.NameOnAccount == nil {
		var ret string
		return ret
	}
	return *o.NameOnAccount
}

// GetNameOnAccountOk returns a tuple with the NameOnAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetNameOnAccountOk() (*string, bool) {
	if o == nil || o.NameOnAccount == nil {
		return nil, false
	}
	return o.NameOnAccount, true
}

// HasNameOnAccount returns a boolean if a field has been set.
func (o *P2pRecipient) HasNameOnAccount() bool {
	if o != nil && o.NameOnAccount != nil {
		return true
	}

	return false
}

// SetNameOnAccount gets a reference to the given string and assigns it to the NameOnAccount field.
func (o *P2pRecipient) SetNameOnAccount(v string) {
	o.NameOnAccount = &v
}

// GetSanctionScore returns the SanctionScore field value if set, zero value otherwise.
func (o *P2pRecipient) GetSanctionScore() string {
	if o == nil || o.SanctionScore == nil {
		var ret string
		return ret
	}
	return *o.SanctionScore
}

// GetSanctionScoreOk returns a tuple with the SanctionScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P2pRecipient) GetSanctionScoreOk() (*string, bool) {
	if o == nil || o.SanctionScore == nil {
		return nil, false
	}
	return o.SanctionScore, true
}

// HasSanctionScore returns a boolean if a field has been set.
func (o *P2pRecipient) HasSanctionScore() bool {
	if o != nil && o.SanctionScore != nil {
		return true
	}

	return false
}

// SetSanctionScore gets a reference to the given string and assigns it to the SanctionScore field.
func (o *P2pRecipient) SetSanctionScore(v string) {
	o.SanctionScore = &v
}

func (o P2pRecipient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.MiddleName != nil {
		toSerialize["middle_name"] = o.MiddleName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Nationality != nil {
		toSerialize["nationality"] = o.Nationality
	}
	if o.DateOfBirth != nil {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if o.AccountType != nil {
		toSerialize["account_type"] = o.AccountType
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.GovernmentIds != nil {
		toSerialize["government_ids"] = o.GovernmentIds
	}
	if o.NameOnAccount != nil {
		toSerialize["name_on_account"] = o.NameOnAccount
	}
	if o.SanctionScore != nil {
		toSerialize["sanction_score"] = o.SanctionScore
	}
	return json.Marshal(toSerialize)
}

type NullableP2pRecipient struct {
	value *P2pRecipient
	isSet bool
}

func (v NullableP2pRecipient) Get() *P2pRecipient {
	return v.value
}

func (v *NullableP2pRecipient) Set(val *P2pRecipient) {
	v.value = val
	v.isSet = true
}

func (v NullableP2pRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullableP2pRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableP2pRecipient(val *P2pRecipient) *NullableP2pRecipient {
	return &NullableP2pRecipient{value: val, isSet: true}
}

func (v NullableP2pRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableP2pRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


