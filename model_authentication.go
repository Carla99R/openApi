/*
Send Payment Transfer API

Mastercard Send Payment Transfer API

API version: 1.0.1
Contact: apisupport@mastercard.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Authentication Customer would have to pass either Authentication code or Authentication value if they pass the Authentication object.
type Authentication struct {
	// List of name/value pairs containing authentication values. Refer 'Authentication Value URIs'
	AuthenticationValue *string `json:"authentication_value,omitempty"`
	// Authentication Code indicates the authentication mechanism. This can contain one of the following values - AUTHENTICATED_CAVV, NON_AUTHENTICATED_3D_SECURE, NON_AUTHENTICATED and NON_SECURE.
	AuthenticationCode *string `json:"authentication_code,omitempty"`
}

// NewAuthentication instantiates a new Authentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthentication() *Authentication {
	this := Authentication{}
	return &this
}

// NewAuthenticationWithDefaults instantiates a new Authentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationWithDefaults() *Authentication {
	this := Authentication{}
	return &this
}

// GetAuthenticationValue returns the AuthenticationValue field value if set, zero value otherwise.
func (o *Authentication) GetAuthenticationValue() string {
	if o == nil || o.AuthenticationValue == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationValue
}

// GetAuthenticationValueOk returns a tuple with the AuthenticationValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authentication) GetAuthenticationValueOk() (*string, bool) {
	if o == nil || o.AuthenticationValue == nil {
		return nil, false
	}
	return o.AuthenticationValue, true
}

// HasAuthenticationValue returns a boolean if a field has been set.
func (o *Authentication) HasAuthenticationValue() bool {
	if o != nil && o.AuthenticationValue != nil {
		return true
	}

	return false
}

// SetAuthenticationValue gets a reference to the given string and assigns it to the AuthenticationValue field.
func (o *Authentication) SetAuthenticationValue(v string) {
	o.AuthenticationValue = &v
}

// GetAuthenticationCode returns the AuthenticationCode field value if set, zero value otherwise.
func (o *Authentication) GetAuthenticationCode() string {
	if o == nil || o.AuthenticationCode == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationCode
}

// GetAuthenticationCodeOk returns a tuple with the AuthenticationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authentication) GetAuthenticationCodeOk() (*string, bool) {
	if o == nil || o.AuthenticationCode == nil {
		return nil, false
	}
	return o.AuthenticationCode, true
}

// HasAuthenticationCode returns a boolean if a field has been set.
func (o *Authentication) HasAuthenticationCode() bool {
	if o != nil && o.AuthenticationCode != nil {
		return true
	}

	return false
}

// SetAuthenticationCode gets a reference to the given string and assigns it to the AuthenticationCode field.
func (o *Authentication) SetAuthenticationCode(v string) {
	o.AuthenticationCode = &v
}

func (o Authentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthenticationValue != nil {
		toSerialize["authentication_value"] = o.AuthenticationValue
	}
	if o.AuthenticationCode != nil {
		toSerialize["authentication_code"] = o.AuthenticationCode
	}
	return json.Marshal(toSerialize)
}

type NullableAuthentication struct {
	value *Authentication
	isSet bool
}

func (v NullableAuthentication) Get() *Authentication {
	return v.value
}

func (v *NullableAuthentication) Set(val *Authentication) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthentication(val *Authentication) *NullableAuthentication {
	return &NullableAuthentication{value: val, isSet: true}
}

func (v NullableAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


